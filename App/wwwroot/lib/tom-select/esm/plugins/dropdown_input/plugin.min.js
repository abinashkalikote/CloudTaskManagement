const KEY_ESC=27,KEY_TAB=9,accent_pat="[̀-ͯ·ʾʼ]",latin_convert={},latin_condensed={"/":"⁄∕",0:"߀",a:"ⱥɐɑ",aa:"ꜳ",ae:"æǽǣ",ao:"ꜵ",au:"ꜷ",av:"ꜹꜻ",ay:"ꜽ",b:"ƀɓƃ",c:"ꜿƈȼↄ",d:"đɗɖᴅƌꮷԁɦ",e:"ɛǝᴇɇ",f:"ꝼƒ",g:"ǥɠꞡᵹꝿɢ",h:"ħⱨⱶɥ",i:"ɨı",j:"ɉȷ",k:"ƙⱪꝁꝃꝅꞣ",l:"łƚɫⱡꝉꝇꞁɭ",m:"ɱɯϻ",n:"ꞥƞɲꞑᴎлԉ",o:"øǿɔɵꝋꝍᴑ",oe:"œ",oi:"ƣ",oo:"ꝏ",ou:"ȣ",p:"ƥᵽꝑꝓꝕρ",q:"ꝗꝙɋ",r:"ɍɽꝛꞧꞃ",s:"ßȿꞩꞅʂ",t:"ŧƭʈⱦꞇ",th:"þ",tz:"ꜩ",u:"ʉ",v:"ʋꝟʌ",vy:"ꝡ",w:"ⱳ",y:"ƴɏỿ",z:"ƶȥɀⱬꝣ",hv:"ƕ"};for(let o in latin_condensed){let n=latin_condensed[o]||"";for(let t=0;t<n.length;t++){let e=n.substring(t,t+1);latin_convert[e]=o}}new RegExp(Object.keys(latin_convert).join("|")+"|"+accent_pat,"gu");const iterate=(e,t)=>{if(Array.isArray(e))e.forEach(t);else for(var n in e)e.hasOwnProperty(n)&&t(e[n],n)},getDom=e=>{return e.jquery?e[0]:e instanceof HTMLElement?e:isHtmlString(e)?((t=document.createElement("template")).innerHTML=e.trim(),t.content.firstChild):document.querySelector(e);var t},isHtmlString=e=>"string"==typeof e&&-1<e.indexOf("<"),addClasses=(e,...t)=>{var n=classesArray(t);(e=castAsArray(e)).map(t=>{n.map(e=>{t.classList.add(e)})})},classesArray=e=>{var t=[];return iterate(e,e=>{"string"==typeof e&&(e=e.trim().split(/[\11\12\14\15\40]/)),Array.isArray(e)&&(t=t.concat(e))}),t.filter(Boolean)},castAsArray=e=>e=Array.isArray(e)?e:[e],preventDefault=(e,t=!1)=>{e&&(e.preventDefault(),t&&e.stopPropagation())},addEvent=(e,t,n,o)=>{e.addEventListener(t,n,o)};function plugin(){const n=this;n.settings.shouldOpen=!0,n.hook("before","setup",()=>{n.focus_node=n.control,addClasses(n.control_input,"dropdown-input");const e=getDom('<div class="dropdown-input-wrap">'),t=(e.append(n.control_input),n.dropdown.insertBefore(e,n.dropdown.firstChild),getDom('<input class="items-placeholder" tabindex="-1" />'));t.placeholder=n.settings.placeholder||"",n.control.append(t)}),n.on("initialize",()=>{n.control_input.addEventListener("keydown",e=>{switch(e.keyCode){case KEY_ESC:return n.isOpen&&(preventDefault(e,!0),n.close()),void n.clearActiveItems();case KEY_TAB:n.focus_node.tabIndex=-1}return n.onKeyDown.call(n,e)}),n.on("blur",()=>{n.focus_node.tabIndex=n.isDisabled?-1:n.tabIndex}),n.on("dropdown_open",()=>{n.control_input.focus()});const t=n.onBlur;n.hook("instead","onBlur",e=>{if(!e||e.relatedTarget!=n.control_input)return t.call(n)}),addEvent(n.control_input,"blur",()=>n.onBlur()),n.hook("before","close",()=>{n.isOpen&&n.focus_node.focus({preventScroll:!0})})})}export{plugin as default};